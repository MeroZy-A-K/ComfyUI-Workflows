{
  "id": "749a42cc-b71c-4c37-8bcf-6905038d7158",
  "revision": 0,
  "last_node_id": 76,
  "last_link_id": 136,
  "nodes": [
    {
      "id": 23,
      "type": "SaveImage",
      "pos": [
        1870,
        2030
      ],
      "size": [
        315,
        270
      ],
      "flags": {},
      "order": 25,
      "mode": 0,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 25
        }
      ],
      "outputs": [],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.27",
        "Node name for S&R": "SaveImage"
      },
      "widgets_values": [
        "ComfyUI"
      ]
    },
    {
      "id": 40,
      "type": "MarkdownNote",
      "pos": [
        1870,
        1880
      ],
      "size": [
        311.29864501953125,
        88
      ],
      "flags": {},
      "order": 0,
      "mode": 0,
      "inputs": [],
      "outputs": [],
      "properties": {},
      "widgets_values": [
        "## ‚úÖ Output\n\nSave image in ComfyUI/Output/ (folder)."
      ],
      "color": "#222",
      "bgcolor": "#000"
    },
    {
      "id": 36,
      "type": "MarkdownNote",
      "pos": [
        -270,
        1780
      ],
      "size": [
        310,
        194.41612243652344
      ],
      "flags": {},
      "order": 1,
      "mode": 0,
      "inputs": [],
      "outputs": [],
      "properties": {},
      "widgets_values": [
        "## üß© Model Loaders  \n\nLoad and use your favorite model and clip.  \n\nüîπ **Checkpoint** : The main model file (like `.safetensors` or `.ckpt`) that defines the style and knowledge of your AI.  \n\nüîπ **Clip** : A text encoder that translates your written prompt into a form the model understands.  \n\nüîπ **VAE (Variational Autoencoder)** : The tool that converts an image into its compressed **latent code** (for the model to work with), and then reverses it back into a final image.  \n"
      ],
      "color": "#222",
      "bgcolor": "#000"
    },
    {
      "id": 46,
      "type": "CheckpointLoaderSimple",
      "pos": [
        -270,
        2020
      ],
      "size": [
        315,
        98
      ],
      "flags": {},
      "order": 2,
      "mode": 0,
      "inputs": [],
      "outputs": [
        {
          "name": "MODEL",
          "type": "MODEL",
          "slot_index": 0,
          "links": [
            74
          ]
        },
        {
          "name": "CLIP",
          "type": "CLIP",
          "slot_index": 1,
          "links": [
            78
          ]
        },
        {
          "name": "VAE",
          "type": "VAE",
          "slot_index": 2,
          "links": [
            69,
            99
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.27",
        "Node name for S&R": "CheckpointLoaderSimple"
      },
      "widgets_values": [
        "realvisxlV50_v50Bakedvae.safetensors"
      ]
    },
    {
      "id": 13,
      "type": "CLIPTextEncode",
      "pos": [
        110,
        2020
      ],
      "size": [
        320.9094543457031,
        119.13298797607422
      ],
      "flags": {},
      "order": 15,
      "mode": 0,
      "inputs": [
        {
          "name": "clip",
          "type": "CLIP",
          "link": 82
        }
      ],
      "outputs": [
        {
          "name": "CONDITIONING",
          "type": "CONDITIONING",
          "slot_index": 0,
          "links": [
            66,
            102
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.27",
        "Node name for S&R": "CLIPTextEncode"
      },
      "widgets_values": [
        "modern architecture building, glass steel, cityscape, street view,morning light, hdr, 8k, sharp detail, archidaily\n"
      ],
      "color": "#232",
      "bgcolor": "#353"
    },
    {
      "id": 42,
      "type": "CLIPTextEncode",
      "pos": [
        110,
        2190
      ],
      "size": [
        320,
        90
      ],
      "flags": {},
      "order": 16,
      "mode": 0,
      "inputs": [
        {
          "name": "clip",
          "type": "CLIP",
          "link": 83
        }
      ],
      "outputs": [
        {
          "name": "CONDITIONING",
          "type": "CONDITIONING",
          "slot_index": 0,
          "links": [
            52,
            103
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.27",
        "Node name for S&R": "CLIPTextEncode"
      },
      "widgets_values": [
        "text, watermark"
      ],
      "color": "#322",
      "bgcolor": "#533"
    },
    {
      "id": 51,
      "type": "LoraLoader",
      "pos": [
        -266.88037109375,
        2355.35107421875
      ],
      "size": [
        270,
        126
      ],
      "flags": {},
      "order": 12,
      "mode": 0,
      "inputs": [
        {
          "name": "model",
          "type": "MODEL",
          "link": 79
        },
        {
          "name": "clip",
          "type": "CLIP",
          "link": 81
        }
      ],
      "outputs": [
        {
          "name": "MODEL",
          "type": "MODEL",
          "links": [
            80
          ]
        },
        {
          "name": "CLIP",
          "type": "CLIP",
          "links": [
            82,
            83
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.44",
        "Node name for S&R": "LoraLoader"
      },
      "widgets_values": [
        "dAIversityLoRASDXL-PhotoSemiReal.safetensors",
        0.7500000000000001,
        0.7500000000000001
      ]
    },
    {
      "id": 21,
      "type": "VAEDecode",
      "pos": [
        1600,
        2030
      ],
      "size": [
        210,
        46
      ],
      "flags": {},
      "order": 24,
      "mode": 0,
      "inputs": [
        {
          "name": "samples",
          "type": "LATENT",
          "link": 73
        },
        {
          "name": "vae",
          "type": "VAE",
          "link": 69
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "slot_index": 0,
          "links": [
            25
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.27",
        "Node name for S&R": "VAEDecode"
      },
      "widgets_values": []
    },
    {
      "id": 38,
      "type": "MarkdownNote",
      "pos": [
        1220,
        1590
      ],
      "size": [
        605.2103881835938,
        370.25836181640625
      ],
      "flags": {},
      "order": 3,
      "mode": 0,
      "inputs": [],
      "outputs": [],
      "properties": {},
      "widgets_values": [
        "## ‚öôÔ∏è Config & Processing  \n\nConfiguration settings for sampling.  \n\nüîπ **Load Image** : Brings an external image into the workflow.  \n- **Image Path** : Select the image file you want to load.  \n\nüîπ **VAE Encode** : Converts the loaded image into latent space so it can be processed.  \n- **Image** : Connect from Load Image.  \n- **VAE** : The Variational Autoencoder used for encoding the image.  \n\nüîπ **K Sampler** : The core sampling process ‚Äî it transforms latent noise into a structured image.  \n- **Model** : Connect your Checkpoint (the main model).  \n- **Positive Prompt** : Encoded text from CLIP with what you *want* to see.  \n- **Negative Prompt** : Encoded text from CLIP with what you *don‚Äôt* want.  \n- **Latent Image** : Connect from VAE Encode.  \n- **Seed** : Controls randomness (same seed = repeatable results).  \n- **Steps** : Number of iterations (more steps = higher quality but slower) **30 to 45 steps is fine**.  \n- **CFG (Classifier-Free Guidance)** : Strength of prompt influence (higher = follow prompt more strictly) **7‚Äì8 = normal**.  \n- **Sampler Method** : Algorithm used for sampling (Euler, DPM++, etc.) ‚Äì does not drastically affect results.  \n\nüîπ **VAE Decode** : Converts the processed latent back into a final image.  \n- **Samples** : The latent output from K Sampler.  \n- **VAE** : The Variational Autoencoder (defines how latents are converted back into pixels).  \n"
      ],
      "color": "#222",
      "bgcolor": "#000"
    },
    {
      "id": 68,
      "type": "PreviewImage",
      "pos": [
        730,
        2620
      ],
      "size": [
        255.11875915527344,
        332.0804443359375
      ],
      "flags": {},
      "order": 14,
      "mode": 0,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 134
        }
      ],
      "outputs": [],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.57",
        "Node name for S&R": "PreviewImage"
      },
      "widgets_values": []
    },
    {
      "id": 74,
      "type": "PreviewImage",
      "pos": [
        1000,
        2620
      ],
      "size": [
        246.37710571289062,
        332.3266906738281
      ],
      "flags": {},
      "order": 21,
      "mode": 0,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 124
        }
      ],
      "outputs": [],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.57",
        "Node name for S&R": "PreviewImage"
      },
      "widgets_values": []
    },
    {
      "id": 71,
      "type": "InpaintPreprocessor",
      "pos": [
        380,
        2620
      ],
      "size": [
        298.068359375,
        78
      ],
      "flags": {},
      "order": 18,
      "mode": 0,
      "inputs": [
        {
          "name": "image",
          "type": "IMAGE",
          "link": 126
        },
        {
          "name": "mask",
          "type": "MASK",
          "link": 127
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            123
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfyui_controlnet_aux",
        "ver": "1.1.0",
        "Node name for S&R": "InpaintPreprocessor"
      },
      "widgets_values": [
        false
      ]
    },
    {
      "id": 75,
      "type": "ImagePadForOutpaint",
      "pos": [
        60,
        2630
      ],
      "size": [
        270,
        174
      ],
      "flags": {},
      "order": 13,
      "mode": 0,
      "inputs": [
        {
          "name": "image",
          "type": "IMAGE",
          "link": 128
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            126,
            130
          ]
        },
        {
          "name": "MASK",
          "type": "MASK",
          "links": [
            127
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.57",
        "Node name for S&R": "ImagePadForOutpaint"
      },
      "widgets_values": [
        128,
        128,
        128,
        128,
        32
      ]
    },
    {
      "id": 76,
      "type": "GetImageSize",
      "pos": [
        70,
        2850
      ],
      "size": [
        263.5156555175781,
        136
      ],
      "flags": {},
      "order": 17,
      "mode": 0,
      "inputs": [
        {
          "name": "image",
          "type": "IMAGE",
          "link": 130
        }
      ],
      "outputs": [
        {
          "name": "width",
          "type": "INT",
          "links": [
            131
          ]
        },
        {
          "name": "height",
          "type": "INT",
          "links": [
            132
          ]
        },
        {
          "name": "batch_size",
          "type": "INT",
          "links": null
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.57",
        "Node name for S&R": "GetImageSize"
      },
      "widgets_values": []
    },
    {
      "id": 63,
      "type": "ControlNetApplyAdvanced",
      "pos": [
        890,
        2060
      ],
      "size": [
        270,
        186
      ],
      "flags": {},
      "order": 22,
      "mode": 0,
      "inputs": [
        {
          "name": "positive",
          "type": "CONDITIONING",
          "link": 102
        },
        {
          "name": "negative",
          "type": "CONDITIONING",
          "link": 103
        },
        {
          "name": "control_net",
          "type": "CONTROL_NET",
          "link": 136
        },
        {
          "name": "image",
          "type": "IMAGE",
          "link": 133
        },
        {
          "name": "vae",
          "shape": 7,
          "type": "VAE",
          "link": 99
        }
      ],
      "outputs": [
        {
          "name": "positive",
          "type": "CONDITIONING",
          "links": [
            100
          ]
        },
        {
          "name": "negative",
          "type": "CONDITIONING",
          "links": [
            101
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.57",
        "Node name for S&R": "ControlNetApplyAdvanced"
      },
      "widgets_values": [
        1,
        0,
        1
      ]
    },
    {
      "id": 66,
      "type": "EmptyLatentImage",
      "pos": [
        890,
        2300
      ],
      "size": [
        270,
        106
      ],
      "flags": {},
      "order": 19,
      "mode": 0,
      "inputs": [
        {
          "name": "width",
          "type": "INT",
          "widget": {
            "name": "width"
          },
          "link": 131
        },
        {
          "name": "height",
          "type": "INT",
          "widget": {
            "name": "height"
          },
          "link": 132
        }
      ],
      "outputs": [
        {
          "name": "LATENT",
          "type": "LATENT",
          "links": [
            109
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.57",
        "Node name for S&R": "EmptyLatentImage"
      },
      "widgets_values": [
        512,
        512,
        1
      ]
    },
    {
      "id": 64,
      "type": "ControlNetLoader",
      "pos": [
        470,
        2070
      ],
      "size": [
        270,
        58
      ],
      "flags": {},
      "order": 4,
      "mode": 0,
      "inputs": [],
      "outputs": [
        {
          "name": "CONTROL_NET",
          "type": "CONTROL_NET",
          "links": [
            121
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.57",
        "Node name for S&R": "ControlNetLoader"
      },
      "widgets_values": [
        "controlnet-union-sdxl-1.0-promax.safetensors"
      ]
    },
    {
      "id": 72,
      "type": "SetUnionControlNetType",
      "pos": [
        470,
        2190
      ],
      "size": [
        270,
        58
      ],
      "flags": {},
      "order": 10,
      "mode": 0,
      "inputs": [
        {
          "name": "control_net",
          "type": "CONTROL_NET",
          "link": 121
        }
      ],
      "outputs": [
        {
          "name": "CONTROL_NET",
          "type": "CONTROL_NET",
          "links": [
            136
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.57",
        "Node name for S&R": "SetUnionControlNetType"
      },
      "widgets_values": [
        "repaint"
      ]
    },
    {
      "id": 49,
      "type": "KSampler",
      "pos": [
        1220,
        2020
      ],
      "size": [
        360,
        480
      ],
      "flags": {},
      "order": 23,
      "mode": 0,
      "inputs": [
        {
          "name": "model",
          "type": "MODEL",
          "link": 80
        },
        {
          "name": "positive",
          "type": "CONDITIONING",
          "link": 100
        },
        {
          "name": "negative",
          "type": "CONDITIONING",
          "link": 101
        },
        {
          "name": "latent_image",
          "type": "LATENT",
          "link": 109
        }
      ],
      "outputs": [
        {
          "name": "LATENT",
          "type": "LATENT",
          "slot_index": 0,
          "links": [
            73
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.27",
        "Node name for S&R": "KSampler"
      },
      "widgets_values": [
        18193306620478,
        "randomize",
        30,
        7,
        "dpmpp_2m_sde",
        "karras",
        1
      ]
    },
    {
      "id": 37,
      "type": "MarkdownNote",
      "pos": [
        110,
        1820
      ],
      "size": [
        318.70135498046875,
        141.56045532226562
      ],
      "flags": {},
      "order": 5,
      "mode": 0,
      "inputs": [],
      "outputs": [],
      "properties": {},
      "widgets_values": [
        "## üìù Inputs\n\nYour prompt goes here.  \n\nüîπ **Prompt** : The text you write to describe the image you want.  \n\nüîπ **Clip** : Translates your prompt into a **latent code** that the model can understand and use to generate the image.  \n"
      ],
      "color": "#222",
      "bgcolor": "#000"
    },
    {
      "id": 69,
      "type": "MarkdownNote",
      "pos": [
        440,
        1655.422607421875
      ],
      "size": [
        776.1865844726562,
        304.5774841308594
      ],
      "flags": {
        "collapsed": false
      },
      "order": 6,
      "mode": 0,
      "inputs": [],
      "outputs": [],
      "properties": {},
      "widgets_values": [
        "## üéõ ControlNet ‚Äì Apply (Outpainting Mode)  \n\nWhen using **ControlNet for outpainting**, the setup is slightly different.  \nWe guide the model to repaint the black (empty) areas around the input image.  \n\nüîπ **SetUnionControlNetType** :  \n- Set the value to **Repaint** (this tells ControlNet we are doing *outpainting* instead of normal control).  \n\nüîπ **Load ControlNet** : Loads the ControlNet model you want to use.  \n- Example: **ControlNet SDXL ProMax** (recommended for SDXL workflows).  \n\nüîπ **Apply ControlNet** : Connects your prompt and outpainting mask to the model.  \n- **Positive / Negative** : Prompts from CLIP (what you *want* and *don‚Äôt want*).  \n- **ControlNet** : Connected from **Load ControlNet**.  \n- **Image** : ‚ö†Ô∏è Must be your original image prepared for outpainting.  \n  - The **area to expand** should be filled with **black** (empty zone).  \n  - ControlNet will repaint and denoise this black region.  \n- **VAE** : The Variational Autoencoder of your main model (keeps image consistency).  \n- **Output** : New **Positive / Negative** embeddings with ControlNet outpainting guidance.  \n"
      ],
      "color": "#222",
      "bgcolor": "#000"
    },
    {
      "id": 50,
      "type": "LoraLoader",
      "pos": [
        -270,
        2180
      ],
      "size": [
        270,
        126
      ],
      "flags": {},
      "order": 9,
      "mode": 0,
      "inputs": [
        {
          "name": "model",
          "type": "MODEL",
          "link": 74
        },
        {
          "name": "clip",
          "type": "CLIP",
          "link": 78
        }
      ],
      "outputs": [
        {
          "name": "MODEL",
          "type": "MODEL",
          "links": [
            79
          ]
        },
        {
          "name": "CLIP",
          "type": "CLIP",
          "links": [
            81
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.44",
        "Node name for S&R": "LoraLoader"
      },
      "widgets_values": [
        "lwmirXL-V1.0fp16.safetensors",
        1.0000000000000002,
        1.0000000000000002
      ]
    },
    {
      "id": 54,
      "type": "ImageResizeKJv2",
      "pos": [
        -272.830322265625,
        2989.843017578125
      ],
      "size": [
        270,
        336
      ],
      "flags": {},
      "order": 11,
      "mode": 0,
      "inputs": [
        {
          "name": "image",
          "type": "IMAGE",
          "link": 87
        },
        {
          "name": "mask",
          "shape": 7,
          "type": "MASK",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            128,
            134
          ]
        },
        {
          "name": "width",
          "type": "INT",
          "links": []
        },
        {
          "name": "height",
          "type": "INT",
          "links": []
        },
        {
          "name": "mask",
          "type": "MASK",
          "links": null
        }
      ],
      "properties": {
        "cnr_id": "comfyui-kjnodes",
        "ver": "1.1.4",
        "Node name for S&R": "ImageResizeKJv2"
      },
      "widgets_values": [
        1024,
        1024,
        "nearest-exact",
        "resize",
        "0, 0, 0",
        "center",
        2,
        "cpu"
      ]
    },
    {
      "id": 62,
      "type": "MarkdownNote",
      "pos": [
        -840,
        2570
      ],
      "size": [
        541.1270141601562,
        523.1102905273438
      ],
      "flags": {},
      "order": 7,
      "mode": 0,
      "inputs": [],
      "outputs": [],
      "properties": {},
      "widgets_values": [
        "## üéõ ControlNet ‚Äì Preprocessors (Outpainting Setup)  \n\nFor **outpainting**, we first need to prepare the image so that the areas we want to expand become **black regions**.  \nThese black areas will be regenerated during denoising.  \n\n### üîπ Step 1 ‚Äì Pad Image for Outpainting  \n- Expands the original image by adding borders around it.  \n- **Values** : Define how many pixels (top, bottom, left, right) to add.  \n- **Output** :  \n  - **Image** ‚Üí The padded image.  \n  - **Mask** ‚Üí Shows which areas are new (to be outpainted).  \n\n### üîπ Step 2 ‚Äì Inpaint Preprocessor  \n- Combines the padded image with the mask.  \n- Turns the masked area completely **black** (the part to be filled during outpainting).  \n- ‚ö†Ô∏è This node outputs an **RGBA image** (Red, Green, Blue, Alpha).  \n  - **RGB** = 3 channels (standard image).  \n  - **RGBA** = 4 channels (includes transparency/alpha).  \n\n### üîπ Why Convert RGBA ‚Üí RGB  \nComfyUI works best with **RGB images** for denoising and generation.  \nSince the inpaint preprocessor makes the black area transparent (RGBA), we must convert it.  \n\n### üîπ Step 3 - Use **Image Remove Alpha** (from LayerStyle node pack) to turn RGBA ‚Üí RGB:  \n- Transparent background becomes solid black.  \n- This ensures the black area is properly recognized for denoising.  \n\n### üîπ Step 4 ‚Äì Get Image Size  \n- Extracts the width and height of the padded image.  \n- These values are used in **Empty Latent Image** so the denoising canvas matches the new expanded size.  \n"
      ],
      "color": "#222",
      "bgcolor": "#000"
    },
    {
      "id": 52,
      "type": "LoadImage",
      "pos": [
        -282.8302917480469,
        2619.843017578125
      ],
      "size": [
        274.080078125,
        314.0001220703125
      ],
      "flags": {},
      "order": 8,
      "mode": 0,
      "inputs": [],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            87
          ]
        },
        {
          "name": "MASK",
          "type": "MASK",
          "links": []
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.44",
        "Node name for S&R": "LoadImage"
      },
      "widgets_values": [
        "ComfyUI_00024_.png",
        "image"
      ]
    },
    {
      "id": 73,
      "type": "LayerUtility: ImageRemoveAlpha",
      "pos": [
        380,
        2750
      ],
      "size": [
        303.7681579589844,
        102
      ],
      "flags": {},
      "order": 20,
      "mode": 0,
      "inputs": [
        {
          "name": "RGBA_image",
          "type": "IMAGE",
          "link": 123
        },
        {
          "name": "mask",
          "shape": 7,
          "type": "MASK",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "RGB_image",
          "type": "IMAGE",
          "links": [
            124,
            133
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfyui_layerstyle",
        "ver": "1.0.90",
        "Node name for S&R": "LayerUtility: ImageRemoveAlpha"
      },
      "widgets_values": [
        false,
        "#000000"
      ],
      "color": "#223",
      "bgcolor": "#335"
    }
  ],
  "links": [
    [
      25,
      21,
      0,
      23,
      0,
      "IMAGE"
    ],
    [
      69,
      46,
      2,
      21,
      1,
      "VAE"
    ],
    [
      73,
      49,
      0,
      21,
      0,
      "LATENT"
    ],
    [
      74,
      46,
      0,
      50,
      0,
      "MODEL"
    ],
    [
      78,
      46,
      1,
      50,
      1,
      "CLIP"
    ],
    [
      79,
      50,
      0,
      51,
      0,
      "MODEL"
    ],
    [
      80,
      51,
      0,
      49,
      0,
      "MODEL"
    ],
    [
      81,
      50,
      1,
      51,
      1,
      "CLIP"
    ],
    [
      82,
      51,
      1,
      13,
      0,
      "CLIP"
    ],
    [
      83,
      51,
      1,
      42,
      0,
      "CLIP"
    ],
    [
      87,
      52,
      0,
      54,
      0,
      "IMAGE"
    ],
    [
      99,
      46,
      2,
      63,
      4,
      "VAE"
    ],
    [
      100,
      63,
      0,
      49,
      1,
      "CONDITIONING"
    ],
    [
      101,
      63,
      1,
      49,
      2,
      "CONDITIONING"
    ],
    [
      102,
      13,
      0,
      63,
      0,
      "CONDITIONING"
    ],
    [
      103,
      42,
      0,
      63,
      1,
      "CONDITIONING"
    ],
    [
      109,
      66,
      0,
      49,
      3,
      "LATENT"
    ],
    [
      121,
      64,
      0,
      72,
      0,
      "CONTROL_NET"
    ],
    [
      123,
      71,
      0,
      73,
      0,
      "IMAGE"
    ],
    [
      124,
      73,
      0,
      74,
      0,
      "IMAGE"
    ],
    [
      126,
      75,
      0,
      71,
      0,
      "IMAGE"
    ],
    [
      127,
      75,
      1,
      71,
      1,
      "MASK"
    ],
    [
      128,
      54,
      0,
      75,
      0,
      "IMAGE"
    ],
    [
      130,
      75,
      0,
      76,
      0,
      "IMAGE"
    ],
    [
      131,
      76,
      0,
      66,
      0,
      "INT"
    ],
    [
      132,
      76,
      1,
      66,
      1,
      "INT"
    ],
    [
      133,
      73,
      0,
      63,
      3,
      "IMAGE"
    ],
    [
      134,
      54,
      0,
      68,
      0,
      "IMAGE"
    ],
    [
      136,
      72,
      0,
      63,
      2,
      "CONTROL_NET"
    ]
  ],
  "groups": [
    {
      "id": 1,
      "title": "Load image",
      "bounding": [
        -290,
        2540,
        299.84442138671875,
        795.8502807617188
      ],
      "color": "#3f789e",
      "font_size": 24,
      "flags": {}
    },
    {
      "id": 2,
      "title": "Preprocessor / OUTPAINT",
      "bounding": [
        40,
        2540,
        1228.3114013671875,
        455.1861572265625
      ],
      "color": "#3f789e",
      "font_size": 24,
      "flags": {}
    },
    {
      "id": 3,
      "title": "Apply ControlNet",
      "bounding": [
        440,
        1990,
        770,
        270
      ],
      "color": "#b58b2a",
      "font_size": 24,
      "flags": {}
    }
  ],
  "config": {},
  "extra": {
    "ds": {
      "scale": 0.6934334949441451,
      "offset": [
        916.2288472411989,
        -1587.4333448320535
      ]
    },
    "frontendVersion": "1.25.11",
    "node_versions": {
      "efficiency-nodes-comfyui": "3ead4afd120833f3bffdefeca0d6545df8051798",
      "Comfy_KepListStuff": "97320545f9d40bc5c3f63c614c37fcbe88a7dc3d",
      "ComfyUI-Inspire-Pack": "962c3fbda0f6e325792e32bac83af33f01b2519a",
      "ComfyUI-GGUF": "5875c52f59baca3a9372d68c43a3775e21846fe0",
      "comfy-core": "0.3.13",
      "rgthree-comfy": "5d771b8b56a343c24a26e8cea1f0c87c3d58102f"
    },
    "VHS_latentpreview": false,
    "VHS_latentpreviewrate": 0,
    "VHS_MetadataImage": true,
    "VHS_KeepIntermediate": true,
    "ue_links": []
  },
  "version": 0.4
}